"""add agent relation to carcass

Revision ID: 11675b16b740
Revises: 50830ba94924
Create Date: 2025-07-28 21:06:32.275206

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel  # New


# revision identifiers, used by Alembic.
revision = "11675b16b740"
down_revision = "50830ba94924"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "carcass",
        sa.Column("agent_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    # Find all agents by name and simulation_id in carcass to get their id
    connection = op.get_bind()
    result = connection.execute(
        sa.text(
            """
            SELECT carcass.id AS carcass_id, agent.id AS agent_id
            FROM carcass
            JOIN agent ON carcass.agent_name = agent.name AND carcass.simulation_id = agent.simulation_id
            """
        )
    )
    for row in result:
        connection.execute(
            sa.text("UPDATE carcass SET agent_id = :agent_id WHERE id = :carcass_id"),
            {"agent_id": row.agent_id, "carcass_id": row.carcass_id},
        )

    op.create_foreign_key(None, "carcass", "agent", ["agent_id"], ["id"])
    op.alter_column(
        "carcass",
        "agent_id",
        existing_type=sqlmodel.sql.sqltypes.AutoString(),
        nullable=False,
    )
    op.drop_column("carcass", "agent_name")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("carcass_agent_id_fkey", "carcass", type_="foreignkey")
    op.add_column(
        "carcass",
        sa.Column("agent_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    # Restore agent_name from agent table
    connection = op.get_bind()
    result = connection.execute(
        sa.text(
            """
            SELECT carcass.id AS carcass_id, agent.name AS agent_name
            FROM carcass
            JOIN agent ON carcass.agent_id = agent.id
            """
        )
    )
    for row in result:
        connection.execute(
            sa.text(
                "UPDATE carcass SET agent_name = :agent_name WHERE id = :carcass_id"
            ),
            {"agent_name": row.agent_name, "carcass_id": row.carcass_id},
        )
    op.drop_column("carcass", "agent_id")
    # ### end Alembic commands ###
