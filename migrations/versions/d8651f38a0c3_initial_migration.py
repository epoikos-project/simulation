"""Initial Migration

Revision ID: d8651f38a0c3
Revises: 
Create Date: 2025-07-02 16:19:32.913549

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel                                 # New


# revision identifiers, used by Alembic.
revision = 'd8651f38a0c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuration',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('agents', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('settings', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simulation',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('collection_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('running', sa.Boolean(), nullable=False),
    sa.Column('tick', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('world',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('simulation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('simulation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('world_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('x_1', sa.Integer(), nullable=False),
    sa.Column('y_1', sa.Integer(), nullable=False),
    sa.Column('x_2', sa.Integer(), nullable=False),
    sa.Column('y_2', sa.Integer(), nullable=False),
    sa.Column('speed_mltply', sa.Float(), nullable=False),
    sa.Column('resource_density', sa.Float(), nullable=False),
    sa.Column('resource_cluster', sa.Integer(), nullable=False),
    sa.Column('region_energy_cost', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('simulation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('world_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('region_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('x_coord', sa.Integer(), nullable=False),
    sa.Column('y_coord', sa.Integer(), nullable=False),
    sa.Column('available', sa.Boolean(), nullable=False),
    sa.Column('energy_yield', sa.Integer(), nullable=False),
    sa.Column('mining_time', sa.Integer(), nullable=False),
    sa.Column('regrow_time', sa.Integer(), nullable=False),
    sa.Column('harvesting_area', sa.Integer(), nullable=False),
    sa.Column('required_agents', sa.Integer(), nullable=False),
    sa.Column('energy_yield_var', sa.Float(), nullable=False),
    sa.Column('regrow_var', sa.Float(), nullable=False),
    sa.Column('being_harvested', sa.Boolean(), nullable=False),
    sa.Column('start_harvest', sa.Integer(), nullable=False),
    sa.Column('time_harvest', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('collection_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('simulation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('harvesting_resource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('energy_level', sa.Integer(), nullable=False),
    sa.Column('last_error', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hunger', sa.Integer(), nullable=False),
    sa.Column('x_coord', sa.Integer(), nullable=False),
    sa.Column('y_coord', sa.Integer(), nullable=False),
    sa.Column('visibility_range', sa.Integer(), nullable=False),
    sa.Column('range_per_move', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['harvesting_resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agent')
    op.drop_table('resource')
    op.drop_table('region')
    op.drop_table('world')
    op.drop_table('simulation')
    op.drop_table('configuration')
    # ### end Alembic commands ###
